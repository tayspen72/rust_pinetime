//==============================================================================
// Notes
//==============================================================================
// drivers::lcd::lcd.rs
// LCD Essential Functions

//==============================================================================
// Crates and Mods
//==============================================================================


//==============================================================================
// Enums, Structs, and Types
//==============================================================================
pub struct DeviceInfoFlags{
	pub debug_log_active: bool,
}

pub struct DeviceInfo {
	pub flags: DeviceInfoFlags
}

//==============================================================================
// Macros
//==============================================================================


//==============================================================================
// Variables
//==============================================================================
static mut DEVICE_INFO: bool = false;

//==============================================================================
// Implementations
//==============================================================================
impl DeviceInfo {
    #[doc = r"Returns all the peripherals *once*"]
    #[inline]
    pub fn take() -> Option<Self> {
        cortex_m::interrupt::free(|_| {
            if unsafe { DEVICE_INFO } {
                None
            } else {
                Some(unsafe { DeviceInfo::steal() })
            }
        })
    }
	pub unsafe fn steal() -> Self {
		DEVICE_INFO = true;
        DeviceInfo {
			flags: DeviceInfoFlags { 
				debug_log_active: false 
			}
		}
	}
}

//==============================================================================
// Interrupt Handler
//==============================================================================


//==============================================================================
// Task Handler
//==============================================================================

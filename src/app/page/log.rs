//==============================================================================
// Notes
//==============================================================================
// app::page::log.rs

//==============================================================================
// Crates and Mods
//==============================================================================
use crate::app::{info, page};
use crate::drivers::touch::Gesture;

//==============================================================================
// Enums, Structs, and Types
//==============================================================================


//==============================================================================
// Variables
//==============================================================================


//==============================================================================
// Public Functions
//==============================================================================
#[allow(dead_code)]
pub fn start_page() {

}

//==============================================================================
// Private Functions
//==============================================================================


//==============================================================================
// Interrupt Handler
//==============================================================================


//==============================================================================
// Task Handler
//==============================================================================
#[allow(dead_code)]
pub fn task_handler(d: &mut info::DeviceInfo) {
	if d.change_flags.touch_event {
		if let Gesture::SlideDown = d.touch.gesture {
			d.app_page = page::AppPage::Home;
			page::change_page(d);
			return;
		}
	}

	if d.change_flags.button_press {
		if !d.flags.button_pressed {
			d.app_page = page::AppPage::Home;
			page::change_page(d);
			return;
		}
	}
}
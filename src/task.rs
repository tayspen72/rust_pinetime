/*
 * task.rs
 *
 * Created: 21 Jan 2020
 * Author: T. Spencer
 */

//=========================================================================
// Notes
//=========================================================================


//=========================================================================
// Definitions
//=========================================================================


//=========================================================================
// Crates
//=========================================================================
use cortex_m_rt::exception;

//=========================================================================
// Mods
//=========================================================================
use crate::lcd as lcd;

//=========================================================================
// Types
//=========================================================================


//=========================================================================
// Variables
//=========================================================================
static mut _SYSTICK_ELAPSED: bool = false;


//=========================================================================
// Implementations
//=========================================================================


//=========================================================================
// TaskHandler
//=========================================================================
pub fn task_handler(p: &nrf52832_pac::Peripherals){
    unsafe { 
        if _SYSTICK_ELAPSED{
            _SYSTICK_ELAPSED = false;

            lcd::task_handler(&p);
        }
    }
}



//=========================================================================
// Interrupt
//=========================================================================
#[exception]
fn SysTick(){
    unsafe { _SYSTICK_ELAPSED = true; }
}


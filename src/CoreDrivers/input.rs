/*
 * input.rs
 *
 * Created: 12 Feb 2020
 * Author: T. Spencer
 */

//=========================================================================
// Notes
//=========================================================================


//=========================================================================
// Definitions
//=========================================================================
#![feature(const_fn)]

//=========================================================================
// Crates
//=========================================================================


//=========================================================================
// Mods
//=========================================================================


//=========================================================================
// Types
//=========================================================================
pub struct InputLine{
    state: State,
    pin: u8,
    options: Options,
    timestamp: u32,
    // nextInputLine: NextInputLine
}

pub struct Options{
    RisingEdgeOnly: u8,
    FallingEdgeOnly: u8,
    RealTimeCallback: u8
}

pub enum State{
    InputUninitialized,
    Pressed,
    UnPressed,
    PowerOn,
    PowerOff,
    PinHigh,
    PinLow,
    InputPaused
}


//=========================================================================
// Variables
//=========================================================================


//=========================================================================
// Implementations
//=========================================================================
pub const fn InputLineCreateNew(state: State, pin: u8, options: Options, timestamp: u32, /*next: NextInputLine*/) -> InputLine {
    InputLine {
        state: state,
        pin: pin,
        options: options,
        timestamp: timestamp,
        // nextInputLine: next
    }
}

//=========================================================================
// TaskHandler
//=========================================================================
pub fn task_handler() {

}


//=========================================================================
// Interrupt
//=========================================================================

